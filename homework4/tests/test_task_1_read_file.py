"""
Write a function that gets file path as an argument.
Read the first line of the file.
If first line is a number return true if number in an interval [1, 3)*
and false otherwise.
In case of any error, a ValueError should be thrown.

Write a test for that function using pytest library.
You should create files required for the testing inside the test run and remove them after the test run.
(Opposite to previous homeworks when you reused files created manually before the test.)

Definition of done:
 - function is created
 - function is properly formatted
 - function has positive and negative tests
 - tests do a cleanup and remove remove files generated by tests

You will learn:
 - how to test Exceptional cases
 - how to clean up after tests
 - how to check if file exists**
 - how to handle*** and raise**** exceptions in test. Use sample from the documentation.

* https://en.wikipedia.org/wiki/Interval_(mathematics)#Terminology
** https://docs.python.org/3/library/os.path.html
*** https://docs.python.org/3/tutorial/errors.html#handling-exceptions
**** https://docs.python.org/3/tutorial/errors.html#raising-exceptions
"""
import os

import pytest

from homework4.tasks.task_1_read_file import read_magic_number


def test_create_file(tmpdir):
    p = tmpdir.join("hello.txt")
    p.write("2\nhello\n")
    assert p.read() == "2\nhello\n"
    assert len(tmpdir.listdir()) == 1
    assert os.path.exists(tmpdir.join("hello.txt").strpath)


def test_check_number_file(tmpdir):
    p = tmpdir.join("hello.txt")
    p.write("2\nhello\n")
    res = read_magic_number(p)
    assert res


def test_check_error_file(tmpdir):
    p = tmpdir.join("hello.txt")
    p.write("hello\n2\n")
    with pytest.raises(ValueError):
        read_magic_number(p)
